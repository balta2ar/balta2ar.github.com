<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mostly Technical</title><link>https://balta2ar.github.io/</link><description>Recent content on Mostly Technical</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 31 Dec 2022 16:03:18 +0100</lastBuildDate><atom:link href="https://balta2ar.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Segment Trees for overlapping intervals</title><link>https://balta2ar.github.io/posts/2022-12-31-segment-trees-intervals/</link><pubDate>Sat, 31 Dec 2022 16:03:18 +0100</pubDate><guid>https://balta2ar.github.io/posts/2022-12-31-segment-trees-intervals/</guid><description>Today we&amp;rsquo;re gonna look into how to use segment trees to effeciently find intervals that overlap with a given point.
function drawCursor() { drawingContext.setLineDash([2, 20]) background(255) stroke(color(0, 100, 0)) line(mouseX, 0, mouseX, height) } and then
from dataclasses import dataclass, field from typing import Optional, List, Tuple, Callable from math import floor @dataclass class Endpoint: v: float ix: int Visualization of the algorithm:
Article content goes here.</description></item><item><title>Using p5.js in Hugo blog posts</title><link>https://balta2ar.github.io/posts/2022-12-30-p5js/</link><pubDate>Fri, 30 Dec 2022 12:03:18 +0100</pubDate><guid>https://balta2ar.github.io/posts/2022-12-30-p5js/</guid><description>This is a post where I&amp;rsquo;m experimenting with integrating p5.js into my blog posts.
function drawCursor() { drawingContext.setLineDash([2, 20]) background(255) stroke(color(0, 100, 0)) line(mouseX, 0, mouseX, height) } and then
from dataclasses import dataclass, field from typing import Optional, List, Tuple, Callable from math import floor @dataclass class Endpoint: v: float ix: int Visualization of the algorithm:
Article content goes here.</description></item><item><title>Bandwidth shaping in Linux</title><link>https://balta2ar.github.io/posts/2013-11-23-bandwidth-shaping-in-linux/</link><pubDate>Sat, 23 Nov 2013 17:01:00 +0000</pubDate><guid>https://balta2ar.github.io/posts/2013-11-23-bandwidth-shaping-in-linux/</guid><description>It&amp;rsquo;s always been a problem for me to shape traffic in Linux. After Windows experience with Outpost firewall I couldn&amp;rsquo;t find an easy and convenient way to shape traffic in Linux. Judging by the amount of similar questions over the Internet it&amp;rsquo;s unobvious not only to me but to many other users.
It appears there are different ways to achieve that in Linux. I personally found two of them useful: trickle and tc.</description></item><item><title>Download iTunes U Course - The Hacker Way</title><link>https://balta2ar.github.io/posts/2013-10-13-download-itunes-u-course-the-hacker-way/</link><pubDate>Sun, 13 Oct 2013 13:48:00 +0000</pubDate><guid>https://balta2ar.github.io/posts/2013-10-13-download-itunes-u-course-the-hacker-way/</guid><description>Today, kids, we are going to download iTunes U course almost exclusively from the command line.
Why The easiest way to do that is to use iTunes to download all that for you. Unfortunately, while I have iPod/iPad in my home ecosystem, I don&amp;rsquo;t have any Mac computers. Thus, I&amp;rsquo;m running iTunes in a virtual machine on Windows. Imagine my user experience from such combination. Pure pain and suffering.
There wouldn&amp;rsquo;t be this post if it was all smooth.</description></item><item><title>Using R to visualize data</title><link>https://balta2ar.github.io/posts/2013-05-03-using-r-to-visualize-data/</link><pubDate>Fri, 03 May 2013 15:44:18 +0100</pubDate><guid>https://balta2ar.github.io/posts/2013-05-03-using-r-to-visualize-data/</guid><description>R is a great tool for visualising data. Recently I&amp;rsquo;ve got a chance to work on a project which handles rather big amounts of data. I was told the data is big but I&amp;rsquo;ve never seen any visuals myself. One day I decided to collect more information about the data and plot some graphics.
Initially data was collected into csv files of the following structure:
client,type,subtype,size,name bidswitch,aggregates,predict_price_2,114876,2013-02-15-00.bidswitch.prod.predict_price_2.tsv.gz admaxasia,aggregates,budget_4,10398,2013-02-14_17:25:50.2013-02-15_00:15:00.admaxasia.prod.budget_4.tsv.gz tokyo,logs,pixel,3802377,2013-02-15-19-30-00.CET.pixel_v36.userverlua-ireland22_338a1.log.gz tokyo,logs,pixel,2695996,2013-02-15-19-30-00.CET.pixel_v36.userverlua-ireland25_a9a45.log.gz Later the format has changed and a few fields were added: mtime, user, group, perm.</description></item><item><title>Вопросы на собеседовании из курса Algorithms</title><link>https://balta2ar.github.io/posts/2009-09-29-algorithms-interview-questions/</link><pubDate>Tue, 29 Sep 2009 16:03:18 +0100</pubDate><guid>https://balta2ar.github.io/posts/2009-09-29-algorithms-interview-questions/</guid><description>Вопросы на собеседовании из курса Algorithms Заканчивается первая часть курса Algorithms на coursera.org. Это был один из немногих курсов, в котором мне понравилось абсолютно всё: прекрасная подача материала (лектор — сам Седжвик), наглядные слайды, наличие сопутствующей курсу книги, из которой можно почерпнуть больше подробностей по теме, нетривиальные домашние задания и, наконец, вопросы для интервью.
Я первый раз вижу, чтобы в курсе давали примеры таких вопросов. Это отличное подспорье для подготовки к собеседованиям, и поэтому я хочу поделиться ими здесь.</description></item><item><title>About Yuri Bochkarev</title><link>https://balta2ar.github.io/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://balta2ar.github.io/about/</guid><description>I like studying Norwegian and learning things about Computer Science.</description></item></channel></rss>