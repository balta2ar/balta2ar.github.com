<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Mostly Technical</title><link>https://balta2ar.github.io/posts/</link><description>Recent content in Posts on Mostly Technical</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 21 Jan 2023 18:42:16 +0100</lastBuildDate><atom:link href="https://balta2ar.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Parallel processing of a tree with several workers</title><link>https://balta2ar.github.io/posts/2023-01-21-parallel-processing-of-a-tree/</link><pubDate>Sat, 21 Jan 2023 18:42:16 +0100</pubDate><guid>https://balta2ar.github.io/posts/2023-01-21-parallel-processing-of-a-tree/</guid><description>Every once in a while I need to write a script that traverses some structure, typically a tree, that does something to every item, usually just prints it, or makes a query that contains such item. It&amp;rsquo;s fine to implement it in a sequential manner if you have only few elements, but sometimes it takes longer than I wish it took. Surprisingly often I found myself implementing the same pattern, where I create a bunch of workers, and they start traversing the structure all at the same time.</description></item><item><title>Running programs in a separate networking namespace as a systemd service</title><link>https://balta2ar.github.io/posts/2023-01-21-running-programs-in-a-separate-networking-namespace/</link><pubDate>Sat, 21 Jan 2023 17:10:37 +0100</pubDate><guid>https://balta2ar.github.io/posts/2023-01-21-running-programs-in-a-separate-networking-namespace/</guid><description>In my case I needed to run resilio sync in a separate networking namespace, which had internet access over a VPN connection. This wonderful script helps to create a networking interface for an OpenVPN connection. To automate openvpn startup, I made the following systemd service file:
[Unit] Description=Namespaces OpenVPN After=local-fs.target network.target [Service] Type=simple WorkingDirectory=/path/to/nordvpn/config/files ExecStart=/path/to/namespaced-openvpn --config /path/to/nordvpn/config/files/us.ovpn Restart=always [Install] WantedBy=default.target and enabled it
sudo cp namespaced-openvpn.service /etc/systemd/system/ sudo systemctl start namespaced-openvpn.</description></item><item><title>MSI laptop overheating and fan noise</title><link>https://balta2ar.github.io/posts/2023-01-08-msi-laptop-overheating-and-fan-noise/</link><pubDate>Sun, 08 Jan 2023 15:47:14 +0100</pubDate><guid>https://balta2ar.github.io/posts/2023-01-08-msi-laptop-overheating-and-fan-noise/</guid><description>I have MSI GS65 laptop which is running Manjaro Linux. Setting up nvidia drivers har been historically a huge pain, and after one of the updates few months ago, one of the side effects was that any moderate CPU load would cause the fans to go full blast. Besides of reaching nearly 100 degrees Celsius, the noise was unbearable.
I tried attacking the problem several times, but to no avail. Recently, I tried one more time, and this time I managed to reduce the fan noise and the max temperature to consistent 70 degrees Celsius.</description></item><item><title>Multiple p5js Canvases on One Page</title><link>https://balta2ar.github.io/posts/2023-01-01-multiple-p5js-canvases-on-one-page/</link><pubDate>Sun, 01 Jan 2023 20:37:14 +0100</pubDate><guid>https://balta2ar.github.io/posts/2023-01-01-multiple-p5js-canvases-on-one-page/</guid><description>It was fairly easy to set up integration of p5js into my blog posts if I needed only one canvas per post. Having multiple canvases turned out to be a bit more complicated. Since I spent several hours setting it up, I can as well write a post about it.
Two modes of p5js It turns out there are two modes that p5 can work with: global and instance. Read more here: https://github.</description></item><item><title>Segment Trees for overlapping intervals</title><link>https://balta2ar.github.io/posts/2022-12-31-segment-trees-intervals/</link><pubDate>Sat, 31 Dec 2022 16:03:18 +0100</pubDate><guid>https://balta2ar.github.io/posts/2022-12-31-segment-trees-intervals/</guid><description>Segment trees are a data structure that can be used for a variety of problems. Usually, I&amp;rsquo;ve seen them used for range queries, but they can also be used for finding overlapping intervals.
When applied to the problem of answering range queries (e.g. sum on an interval), the key idea with segment trees is to split the problem space into smaller parts during preprocessing, so that during query we can visit only a small part of the problem space.</description></item><item><title>Using p5.js in Hugo blog posts</title><link>https://balta2ar.github.io/posts/2022-12-30-p5js/</link><pubDate>Fri, 30 Dec 2022 12:03:18 +0100</pubDate><guid>https://balta2ar.github.io/posts/2022-12-30-p5js/</guid><description>This is a post where I&amp;rsquo;m experimenting with integrating p5.js into my blog posts.
Sample javascript code:
function drawCursor() { drawingContext.setLineDash([2, 20]) background(255) stroke(color(0, 100, 0)) line(mouseX, 0, mouseX, height) } Sample python code:
from dataclasses import dataclass, field from typing import Optional, List, Tuple, Callable from math import floor @dataclass class Endpoint: v: float ix: int Sample visualization using p5.js:
Your browser does not support iframes.
More content goes here.</description></item><item><title>Bandwidth shaping in Linux</title><link>https://balta2ar.github.io/posts/2013-11-23-bandwidth-shaping-in-linux/</link><pubDate>Sat, 23 Nov 2013 17:01:00 +0000</pubDate><guid>https://balta2ar.github.io/posts/2013-11-23-bandwidth-shaping-in-linux/</guid><description>It&amp;rsquo;s always been a problem for me to shape traffic in Linux. After Windows experience with Outpost firewall I couldn&amp;rsquo;t find an easy and convenient way to shape traffic in Linux. Judging by the amount of similar questions over the Internet it&amp;rsquo;s unobvious not only to me but to many other users.
It appears there are different ways to achieve that in Linux. I personally found two of them useful: trickle and tc.</description></item><item><title>Download iTunes U Course - The Hacker Way</title><link>https://balta2ar.github.io/posts/2013-10-13-download-itunes-u-course-the-hacker-way/</link><pubDate>Sun, 13 Oct 2013 13:48:00 +0000</pubDate><guid>https://balta2ar.github.io/posts/2013-10-13-download-itunes-u-course-the-hacker-way/</guid><description>Today, kids, we are going to download iTunes U course almost exclusively from the command line.
Why The easiest way to do that is to use iTunes to download all that for you. Unfortunately, while I have iPod/iPad in my home ecosystem, I don&amp;rsquo;t have any Mac computers. Thus, I&amp;rsquo;m running iTunes in a virtual machine on Windows. Imagine my user experience from such combination. Pure pain and suffering.
There wouldn&amp;rsquo;t be this post if it was all smooth.</description></item><item><title>Using R to visualize data</title><link>https://balta2ar.github.io/posts/2013-05-03-using-r-to-visualize-data/</link><pubDate>Fri, 03 May 2013 15:44:18 +0100</pubDate><guid>https://balta2ar.github.io/posts/2013-05-03-using-r-to-visualize-data/</guid><description>R is a great tool for visualising data. Recently I&amp;rsquo;ve got a chance to work on a project which handles rather big amounts of data. I was told the data is big but I&amp;rsquo;ve never seen any visuals myself. One day I decided to collect more information about the data and plot some graphics.
Initially data was collected into csv files of the following structure:
client,type,subtype,size,name bidswitch,aggregates,predict_price_2,114876,2013-02-15-00.bidswitch.prod.predict_price_2.tsv.gz admaxasia,aggregates,budget_4,10398,2013-02-14_17:25:50.2013-02-15_00:15:00.admaxasia.prod.budget_4.tsv.gz tokyo,logs,pixel,3802377,2013-02-15-19-30-00.CET.pixel_v36.userverlua-ireland22_338a1.log.gz tokyo,logs,pixel,2695996,2013-02-15-19-30-00.CET.pixel_v36.userverlua-ireland25_a9a45.log.gz Later the format has changed and a few fields were added: mtime, user, group, perm.</description></item><item><title>Вопросы на собеседовании из курса Algorithms</title><link>https://balta2ar.github.io/posts/2009-09-29-algorithms-interview-questions/</link><pubDate>Tue, 29 Sep 2009 16:03:18 +0100</pubDate><guid>https://balta2ar.github.io/posts/2009-09-29-algorithms-interview-questions/</guid><description>Вопросы на собеседовании из курса Algorithms Заканчивается первая часть курса Algorithms на coursera.org. Это был один из немногих курсов, в котором мне понравилось абсолютно всё: прекрасная подача материала (лектор — сам Седжвик), наглядные слайды, наличие сопутствующей курсу книги, из которой можно почерпнуть больше подробностей по теме, нетривиальные домашние задания и, наконец, вопросы для интервью.
Я первый раз вижу, чтобы в курсе давали примеры таких вопросов. Это отличное подспорье для подготовки к собеседованиям, и поэтому я хочу поделиться ими здесь.</description></item></channel></rss>