<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>segment trees on Mostly Technical</title><link>https://balta2ar.github.io/tags/segment-trees/</link><description>Recent content in segment trees on Mostly Technical</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 01 Jan 2023 20:37:14 +0100</lastBuildDate><atom:link href="https://balta2ar.github.io/tags/segment-trees/index.xml" rel="self" type="application/rss+xml"/><item><title>Multiple p5js Canvases on One Page</title><link>https://balta2ar.github.io/posts/2023-01-01-multiple-p5js-canvases-on-one-page/</link><pubDate>Sun, 01 Jan 2023 20:37:14 +0100</pubDate><guid>https://balta2ar.github.io/posts/2023-01-01-multiple-p5js-canvases-on-one-page/</guid><description>It was fairly easy to set up integration of p5js into my blog posts if I needed only one canvas per post. Having multiple canvases turned out to be a bit more complicated. Since I spent several hours setting it up, I can as well write a post about it.
Two modes of p5js It turns out there are two modes that p5 can work with: global and instance. Read more here: https://github.</description></item><item><title>Segment Trees for overlapping intervals</title><link>https://balta2ar.github.io/posts/2022-12-31-segment-trees-intervals/</link><pubDate>Sat, 31 Dec 2022 16:03:18 +0100</pubDate><guid>https://balta2ar.github.io/posts/2022-12-31-segment-trees-intervals/</guid><description>Segment trees are a data structure that can be used for a variety of problems. Usually, I&amp;rsquo;ve seen them used for range queries, but they can also be used for finding overlapping intervals.
When applied to the problem of answering range queries (e.g. sum on an interval), the key idea with segment trees is to split the problem space into smaller parts during preprocessing, so that during query we can visit only a small part of the problem space.</description></item></channel></rss>