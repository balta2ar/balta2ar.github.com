<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>algorithms on Mostly Technical</title><link>https://balta2ar.github.io/tags/algorithms/</link><description>Recent content in algorithms on Mostly Technical</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 31 Dec 2022 16:03:18 +0100</lastBuildDate><atom:link href="https://balta2ar.github.io/tags/algorithms/index.xml" rel="self" type="application/rss+xml"/><item><title>Segment Trees for overlapping intervals</title><link>https://balta2ar.github.io/posts/2022-12-31-segment-trees-intervals/</link><pubDate>Sat, 31 Dec 2022 16:03:18 +0100</pubDate><guid>https://balta2ar.github.io/posts/2022-12-31-segment-trees-intervals/</guid><description>Today we&amp;rsquo;re gonna look into how to use segment trees to effeciently find intervals that overlap with a given point.
function drawCursor() { drawingContext.setLineDash([2, 20]) background(255) stroke(color(0, 100, 0)) line(mouseX, 0, mouseX, height) } and then
from dataclasses import dataclass, field from typing import Optional, List, Tuple, Callable from math import floor @dataclass class Endpoint: v: float ix: int</description></item></channel></rss>