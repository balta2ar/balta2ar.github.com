<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Queue on Mostly Technical</title><link>https://balta2ar.github.io/tags/queue/</link><description>Recent content in Queue on Mostly Technical</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sat, 21 Jan 2023 18:42:16 +0100</lastBuildDate><atom:link href="https://balta2ar.github.io/tags/queue/index.xml" rel="self" type="application/rss+xml"/><item><title>Parallel processing of a tree with several workers</title><link>https://balta2ar.github.io/posts/2023-01-21-parallel-processing-of-a-tree/</link><pubDate>Sat, 21 Jan 2023 18:42:16 +0100</pubDate><guid>https://balta2ar.github.io/posts/2023-01-21-parallel-processing-of-a-tree/</guid><description>&lt;p>Every once in a while I need to write a script that traverses some structure,
typically a tree, that does something to every item, usually just prints it,
or makes a query that contains such item. It&amp;rsquo;s fine to implement it
in a sequential manner if you have only few elements, but sometimes
it takes longer than I wish it took. Surprisingly often I found myself
implementing the same pattern, where I create a bunch of workers, and they
start traversing the structure all at the same time.&lt;/p></description></item></channel></rss>